name: Laravel CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      deployments: write

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: laravel
          POSTGRES_PASSWORD: password
          POSTGRES_DB: laravel_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: pdo_pgsql
          coverage: none

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Copy .env.example to .env
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Configure database
        run: |
          sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=pgsql/' .env
          sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_PORT=.*/DB_PORT=5432/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=laravel_test/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=laravel/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=password/' .env

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            pg_isready -h 127.0.0.1 -p 5432 -U laravel && echo "Postgres is up!" && break
            echo "Waiting for Postgres..."
            sleep 5
          done

      - name: Run migrations
        run: php artisan migrate --force

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          echo "Deploying to production server..."
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_rsa_deploy
          chmod 600 ~/.ssh/id_rsa_deploy
          ssh -i ~/.ssh/id_rsa_deploy -o StrictHostKeyChecking=no ${{ secrets.PRODUCTION_SERVER_USER }}@${{ secrets.PRODUCTION_SERVER_IP }} << 'EOF'
            cd ${{ secrets.DEPLOY_PATH }}
            git pull origin main
            composer install --no-interaction --prefer-dist --optimize-autoloader
            php artisan migrate --force
            php artisan cache:clear
            php artisan config:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
          EOF
          rm -f ~/.ssh/id_rsa_deploy

{
    "openapi": "3.0.0",
    "info": {
        "title": "Play Create Eat API documentation",
        "description": "This is the official API documentation for the Play Create Eat application.",
        "contact": {
            "email": "eugenispas15@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login a user",
                "description": "Logs in a user and returns an authentication token.",
                "operationId": "d2aa532d3b68c87d796d858c85e1cf59",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "StrongPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials provided."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Log out a user",
                "description": "Logs out the authenticated user by deleting their current access token.",
                "operationId": "1317be2c1828e336ba82b3f720c40cac",
                "responses": {
                    "204": {
                        "description": "Successfully logged out"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/otp/verify": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Verify OTP code",
                "description": "Verifies the OTP code for a user and marks the account as verified.",
                "operationId": "14ef8a02182b0afdcc029983cde0e477",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "otp"
                                ],
                                "properties": {
                                    "otp": {
                                        "description": "The OTP code",
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account verified successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid OTP code."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/otp/resend": {
            "post": {
                "tags": [
                    "OTP"
                ],
                "summary": "Resend OTP code",
                "description": "Resends an OTP code to the authenticated user if no active OTP exists.",
                "operationId": "3c0a164590883a825ed6a1848d16224a",
                "responses": {
                    "200": {
                        "description": "OTP code sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP code sent successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "OTP code already sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP code already sent."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/register/step-1": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Start registration - Step 1",
                "operationId": "671e0f0327fc9716f966236bd773c675",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "id_type",
                                    "id_number"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "id_type": {
                                        "type": "string",
                                        "example": "passport"
                                    },
                                    "id_number": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Step 1 completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Step 1 completed successfully."
                                        },
                                        "registration_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/register/step-2": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Complete registration - Step 2",
                "operationId": "e95f22ee27768aa90893d65fda346eb5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "registration_id",
                                    "email",
                                    "phone_number",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "registration_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "StrongPassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "StrongPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJhb..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/invite-register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a user from an invitation",
                "description": "Registers a new user using an invitation code and returns an authentication token.",
                "operationId": "915d720d5fc3d2183efd13552f7be6b1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "first_name",
                                    "last_name",
                                    "id_type",
                                    "id_number",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Invitation code",
                                        "type": "string",
                                        "example": "INV12345"
                                    },
                                    "first_name": {
                                        "description": "User's first name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "description": "User's last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "id_type": {
                                        "description": "Type of identification",
                                        "type": "string",
                                        "enum": [
                                            "passport",
                                            "emirates"
                                        ],
                                        "example": "passport"
                                    },
                                    "id_number": {
                                        "description": "Identification number",
                                        "type": "string",
                                        "example": "A12345678"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "securePassword123"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "format": "password",
                                        "example": "securePassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered from invitation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invitation not found or expired",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invitation not found or expired."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/children": {
            "get": {
                "tags": [
                    "Children"
                ],
                "summary": "Get all children of the authenticated user's family",
                "operationId": "a00e20195833cd24093e1a2f1676ac6b",
                "responses": {
                    "200": {
                        "description": "List of children",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Child ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "first_name": {
                                                "description": "First name of the child",
                                                "type": "string",
                                                "example": "John"
                                            },
                                            "last_name": {
                                                "description": "Last name of the child",
                                                "type": "string",
                                                "example": "Doe"
                                            },
                                            "birth_date": {
                                                "description": "Birth date of the child",
                                                "type": "string",
                                                "format": "date",
                                                "example": "2015-06-15"
                                            },
                                            "gender": {
                                                "description": "Gender of the child",
                                                "type": "string",
                                                "example": "male"
                                            },
                                            "family_id": {
                                                "description": "Family ID associated with the child",
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "created_at": {
                                                "description": "Timestamp of creation",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-01-06T12:34:56Z"
                                            },
                                            "updated_at": {
                                                "description": "Timestamp of last update",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-01-06T12:34:56Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Children"
                ],
                "summary": "Create a new child",
                "operationId": "39c305206d0a3d0b10c471557e12bd1a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "birth_date",
                                    "gender"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "First name of the child",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "description": "Last name of the child",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "birth_date": {
                                        "description": "Birth date of the child in YYYY-MM-DD format",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2015-06-15"
                                    },
                                    "gender": {
                                        "description": "Gender of the child (male, female, other)",
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female",
                                            "other"
                                        ],
                                        "example": "male"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Child created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the created child",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "first_name": {
                                            "description": "First name of the child",
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "last_name": {
                                            "description": "Last name of the child",
                                            "type": "string",
                                            "example": "Doe"
                                        },
                                        "birth_date": {
                                            "description": "Birth date of the child",
                                            "type": "string",
                                            "format": "date",
                                            "example": "2015-06-15"
                                        },
                                        "gender": {
                                            "description": "Gender of the child",
                                            "type": "string",
                                            "example": "male"
                                        },
                                        "family_id": {
                                            "description": "Family ID associated with the child",
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "created_at": {
                                            "description": "Timestamp of creation",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-01-06T12:34:56Z"
                                        },
                                        "updated_at": {
                                            "description": "Timestamp of last update",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-01-06T12:34:56Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "description": "An object containing validation errors for specific fields",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/invite": {
            "post": {
                "tags": [
                    "Invite"
                ],
                "summary": "Invite a family member",
                "description": "Sends an invitation to join the user's family group via email.",
                "operationId": "0c36d3c8852e0ddfbb1b98c7cb14b35b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Email address of the invitee",
                                        "type": "string",
                                        "format": "email",
                                        "example": "invitee@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invitation sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invitation sent successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User is not part of a family",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User is not part of a family."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "Sanctum": {
                "type": "http",
                "description": "Enter only your token. The 'Bearer ' prefix will be added automatically.",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "OTP",
            "description": "OTP"
        },
        {
            "name": "Children",
            "description": "Children"
        },
        {
            "name": "Invite",
            "description": "Invite"
        }
    ]
}